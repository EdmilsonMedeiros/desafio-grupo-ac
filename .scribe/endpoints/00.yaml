name: Auth
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Cria um novo usuário.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nome do usuário. (required)'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Email do usuário. (required)'
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Senha do usuário. (required)'
        required: true
        example: 'O[2UZ5ij-e/dl4m{o,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: consequatur
      email: qkunze@example.com
      password: 'O[2UZ5ij-e/dl4m{o,'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {  
           "message": "Usuário criado com sucesso",
           "user": {
               "id": 1,
               "name": "John Doe",
               "email": "john.doe@example.com",
               "created_at": "2021-01-01 00:00:00",
               "updated_at": "2021-01-01 00:00:00"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Realiza a autenticação do usuário.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email do usuário. (required)'
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Senha do usuário. (required)'
        required: true
        example: 'O[2UZ5ij-e/dl4m{o,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: qkunze@example.com
      password: 'O[2UZ5ij-e/dl4m{o,'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {  
           "access_token": "token",
           "token_type": "bearer",
           "expires_in": 3600
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
           "error": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Encerra a sessão do usuário.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully logged out"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
           "error": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/refresh
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Atualiza o token de acesso.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "access_token": "token",
           "token_type": "bearer",
           "expires_in": 3600
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
           "error": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/me
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retorna os dados do usuário autenticado.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "name": "John Doe",
           "email": "john.doe@example.com",
           "email_verified_at": "2021-01-01 00:00:00",
           "created_at": "2021-01-01 00:00:00",
           "updated_at": "2021-01-01 00:00:00"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
           "error": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
